version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: gaming_platform_db
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database_init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - gaming_network
    restart: unless-stopped

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: gaming_platform_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - gaming_network
    restart: unless-stopped

  # Gaming Platform Application
  app:
    build: .
    container_name: gaming_platform_app
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - JWT_ACCESS_TOKEN=${JWT_ACCESS_TOKEN}
      - PORT=3009
    ports:
      - "3009:3009"
    depends_on:
      - mysql
      - redis
    networks:
      - gaming_network
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: gaming_platform_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - gaming_network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  gaming_network:
    driver: bridge